
-- Tabla de asociación (configuración de la asociación, 1 registro por asociación)
CREATE TABLE public.associations (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  name text NOT NULL,
  logo text, -- url o base64
  phone text,
  address text,
  created_at timestamp with time zone default now() not null
);

-- Tabla de excursiones
CREATE TABLE public.excursions (
  id bigint PRIMARY KEY, -- mismo formato que id generado actualmente: timestamp
  association_id uuid REFERENCES public.associations(id) ON DELETE CASCADE NOT NULL,
  name text NOT NULL,
  date date,
  time text,
  place text,
  stops jsonb,     -- array de paradas como texto
  price text,
  created_at timestamp with time zone default now() not null
);

-- Tabla de pasajeros relacionados a excursión (muchos pasajeros por excursión)
CREATE TABLE public.passengers (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  excursion_id bigint REFERENCES public.excursions(id) ON DELETE CASCADE NOT NULL,
  seat integer NOT NULL,
  name text NOT NULL,
  surname text NOT NULL,
  created_at timestamp with time zone default now() not null,
  UNIQUE (excursion_id, seat) -- Un asiento por excursión
);

-- Políticas RLS: SOLO lectura y escritura para usuarios autenticados de la organización
ALTER TABLE public.associations ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.excursions ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.passengers ENABLE ROW LEVEL SECURITY;

-- Políticas: permite acceso a todos los datos (puedes especificar por usuario si agregas auth, de momento público)
CREATE POLICY "Permitir acceso completo a asociaciones" ON public.associations
  FOR ALL
  USING (true);

CREATE POLICY "Permitir acceso completo a excursiones" ON public.excursions
  FOR ALL
  USING (true);

CREATE POLICY "Permitir acceso completo a pasajeros" ON public.passengers
  FOR ALL
  USING (true);

-- Índices útiles para rendimiento
CREATE INDEX IF NOT EXISTS idx_excursions_association_id ON public.excursions(association_id);
CREATE INDEX IF NOT EXISTS idx_passengers_excursion_id ON public.passengers(excursion_id);
